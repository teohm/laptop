#!/bin/sh

# Welcome to macbook laptop script!
# Be prepared to turn your macbook
# into an awesome development machine.

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

# append_to_zshrc() {
#   local text="$1" zshrc
#   local skip_new_line="${2:-0}"

#   if [ -w "$HOME/.zshrc.local" ]; then
#     zshrc="$HOME/.zshrc.local"
#   else
#     zshrc="$HOME/.zshrc"
#   fi

#   if ! grep -Fqs "$text" "$zshrc"; then
#     if [ "$skip_new_line" -eq 1 ]; then
#       printf "%s\\n" "$text" >> "$zshrc"
#     else
#       printf "\\n%s\\n" "$text" >> "$zshrc"
#     fi
#   fi
# }

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed (exit status: $ret)\n\n" >&2; exit $ret' EXIT

set -e

# update_shell() {
#   local shell_path;
#   shell_path="$(command -v zsh)"

#   fancy_echo "Changing your shell to zsh ..."
#   if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
#     fancy_echo "Adding '$shell_path' to /etc/shells"
#     sudo sh -c "echo $shell_path >> /etc/shells"
#   fi
#   sudo chsh -s "$shell_path" "$USER"
# }

# case "$SHELL" in
#   */zsh)
#     if [ "$(command -v zsh)" != '/usr/local/bin/zsh' ] ; then
#       update_shell
#     fi
#     ;;
#   *)
#     update_shell
#     ;;
# esac

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "homebrew/services"

# Unix
brew "gh"
brew "git"
brew "openssl"
brew "reattach-to-user-namespace"
brew "tmux"
brew "vim"
brew "zsh"

# Programming language prerequisites and package managers
brew "coreutils"
brew "gawk"      # used by: nodejs
brew "gpg"       # used by: nodejs

# Databases
brew "postgres"
brew "redis", restart_service: :changed
EOF

fancy_echo "Configuring asdf version manager ..."
if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
fi

fancy_echo "Installing Oh My Zsh ..."
if [ ! -d "$ZSH" ]; then
  sh -c "RUNZSH=no $(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi

fancy_echo "Enabling asdf plugin in Oh My Zsh ..."
if ! grep -qn "^plugins=.*asdf.*" $HOME/.zshrc; then
  sed -i '' 's/^plugins=(\(.*\)/plugins=(asdf \1/' "$HOME/.zshrc"
fi

alias install_asdf_plugin=add_or_update_asdf_plugin
add_or_update_asdf_plugin() {
  local name="$1"
  local url="$2"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name" "$url"
  else
    asdf plugin-update "$name"
  fi
}

# shellcheck disable=SC1090
source "$HOME/.asdf/asdf.sh"
fancy_echo "Adding asdf plugins ..."
add_or_update_asdf_plugin "ruby" "https://github.com/asdf-vm/asdf-ruby.git"
add_or_update_asdf_plugin "nodejs" "https://github.com/asdf-vm/asdf-nodejs.git"

install_asdf_language() {
  local language="$1"
  local version
  version="$(asdf list-all "$language" | grep -v "[a-z]" | tail -1)"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

fancy_echo "Installing latest Ruby ..."
install_asdf_language "ruby"
gem update --system
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

fancy_echo "Installing latest Node ..."
bash "$HOME/.asdf/plugins/nodejs/bin/import-release-team-keyring"
install_asdf_language "nodejs"

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi

fancy_echo "Done. Restart this terminal."
